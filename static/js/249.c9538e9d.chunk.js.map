{"version":3,"file":"static/js/249.c9538e9d.chunk.js","mappings":"kPAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8F,SCchC,EAfyB,SAAHC,GAA2B,IAArBC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MAElC,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACR,EAAI,CAACY,GAAE,GAAAC,OAAKF,EAAMG,IAAMP,MAAOA,EAAME,SACnCE,EAAMI,kBAFFJ,EAAMG,GAIV,KAIb,ECbaE,EAAQf,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAIjBa,EAAQhB,EAAAA,GAAAA,MAAYiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,iDCmDjC,EApDe,WAAO,IAADe,EACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCpB,EAAMsB,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA4BH,EAAAA,EAAAA,UAAS,QAAOI,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,MACXC,EAAiC,QAA5BjB,EAAGK,EAAaa,IAAI,gBAAQ,IAAAlB,EAAAA,EAAI,GAgC3C,OAzBAmB,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIAH,EAAU,WAQVM,MAAM,4FAAD1B,OACyFuB,EAAK,8CARnF,CACdI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,6CAOhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAvC,GAAkB,IAAf0C,EAAO1C,EAAP0C,QACPlB,EAAUkB,GACVd,EAAU,OACZ,IACCe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAnBlC,CAoBF,GAAG,CAACzB,EAAcY,KAGhBgB,EAAAA,EAAAA,MAAA,OAAA3C,SAAA,EACED,EAAAA,EAAAA,KAACQ,EAAK,CAAAP,SAAC,mBACPD,EAAAA,EAAAA,KAACS,EAAK,CAACoC,KAAK,OAAOC,MAAOlB,EAAOmB,SAjCX,SAAAC,GACxB,IAAMC,EAAiC,KAAnBD,EAAEE,OAAOJ,MAAe,CAAElB,MAAOoB,EAAEE,OAAOJ,OAAU,CAAC,EACzE7B,EAAgBgC,EAClB,IA+BKnD,EAAOqD,OAAS,IACfnD,EAAAA,EAAAA,KAACoD,EAAgB,CAACtD,OAAQA,EAAQC,MAAO,CAAEsD,KAAM3B,KAEhC,IAAlB5B,EAAOqD,QACI,KAAVvB,GACW,SAAXJ,GACA,qBAGR,C","sources":["components/MoviesSearchList/MoviesSearchList.styled.jsx","components/MoviesSearchList/MoviesSearchList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: #848484;\n  }\n`;\n","import { Item } from './MoviesSearchList.styled';\n\nconst MoviesSearchList = ({ movies, state }) => {\n  // console.log(movies);\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Item to={`${movie.id}`} state={state}>\n            {movie.original_title}\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesSearchList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 15px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 15px;\n  width: 154px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport MoviesSearchList from '../../components/MoviesSearchList/MoviesSearchList';\nimport { Title, Input } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const title = searchParams.get('title') ?? '';\n\n  const updateQueryString = e => {\n    const searchQuery = e.target.value !== '' ? { title: e.target.value } : {};\n    setSearchParams(searchQuery);\n  };\n\n  useEffect(() => {\n    if (!title) {\n      return;\n    }\n\n    setStatus('loading');\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer 174c7d864c0b478cf762db237aebb993',\n      },\n    };\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=174c7d864c0b478cf762db237aebb993&query=${title}&include_adult=false&language=en-US&page=1`,\n      options\n    )\n      .then(response => response.json())\n      .then(({ results }) => {\n        setMovies(results);\n        setStatus('idle');\n      })\n      .catch(err => console.error(err));\n  }, [searchParams, title]);\n\n  return (\n    <div>\n      <Title>Movies search</Title>\n      <Input type=\"text\" value={title} onChange={updateQueryString} />\n      {movies.length > 0 && (\n        <MoviesSearchList movies={movies} state={{ from: location }} />\n      )}\n      {movies.length === 0 &&\n        title !== '' &&\n        status === 'idle' &&\n        'Nothing is found'}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Item","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","movies","state","_jsx","children","map","movie","to","concat","id","original_title","Title","Input","_templateObject2","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","_useState3","_useState4","status","setStatus","location","useLocation","title","get","useEffect","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","_jsxs","type","value","onChange","e","searchQuery","target","length","MoviesSearchList","from"],"sourceRoot":""}